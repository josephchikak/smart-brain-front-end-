{"ast":null,"code":"var _jsxFileName = \"/Users/JosephChikak/Desktop/React Projects/smart-brain/smart-brain-ZTM/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport ParticlesBg from 'particles-bg';\nimport SignIn from './Signin/SignIn';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    joined: ''\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = JSON.parse(data).outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.faceBox = x => {\n      this.setState({\n        box: x\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": \"clarifai\",\n          \"app_id\": \"main\"\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": `${this.state.input}`\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key 9b3b0653c4bf4c48946bdd5e78984d89'\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs\", requestOptions).then(response => response.text()).then(result => this.faceBox(this.calculateFaceLocation(result))).catch(error => console.log('error', error));\n    };\n\n    this.onRouteChange = prop => {\n      if (this.state.route === 'signin' || this.state.route === 'register') {\n        this.setState({\n          isSignedIn: true\n        });\n      } else if (this.state.route === 'home') {\n        this.setState(initialState);\n      }\n\n      this.setState({\n        route: prop\n      });\n    };\n\n    this.state = initialState;\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onButtonSubmit = this.onButtonSubmit.bind(this);\n    this.calculateFaceLocation = this.calculateFaceLocation.bind(this);\n    this.faceBox = this.faceBox.bind(this);\n    this.loadUser = this.loadUser.bind(this);\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      imageUrl,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : route === 'register' ? /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: 'center',\n            color: 'white'\n          },\n          children: [\" Hello \", this.state.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit,\n          imageUrl: imageUrl,\n          box: box\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ParticlesBg, {\n          type: \"cobweb\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Navigation","ImageLinkForm","ParticlesBg","SignIn","Register","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","joined","App","Component","constructor","props","loadUser","data","setState","calculateFaceLocation","clarifaiFace","JSON","parse","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","faceBox","x","onInputChange","event","target","value","onButtonSubmit","state","raw","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","catch","error","console","log","onRouteChange","prop","bind","render","textAlign","color"],"sources":["/Users/JosephChikak/Desktop/React Projects/smart-brain/smart-brain-ZTM/src/App.js"],"sourcesContent":["\nimport React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport ParticlesBg from 'particles-bg';\nimport SignIn from './Signin/SignIn';\nimport Register from './components/Register/Register';\n\nconst initialState ={\n  input:'',\n  imageUrl:'',\n  box:{},\n  route: 'signin',\n  isSignedIn: false,\n  user:{\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    joined: '' \n  }\n} \n\nclass App extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state = initialState;\n  this.onInputChange =this.onInputChange.bind(this)\n  this.onButtonSubmit =this.onButtonSubmit.bind(this)\n  this.calculateFaceLocation = this.calculateFaceLocation.bind(this)\n  this.faceBox = this.faceBox.bind(this)\n  this.loadUser = this.loadUser.bind(this)\n}\n\nloadUser =(data) =>{\n  this.setState({\n    user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      password: data.password,\n      joined: data.joined\n    }\n  })\n}\n\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = JSON.parse(data).outputs[0].data.regions[0]\n   .region_info.bounding_box;\n  const image = document.getElementById(\"inputimage\");\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    }\n\n}\n\n\n\nfaceBox = (x) =>{\n  this.setState({\n      box: x\n   });\n}\n\n\n\nonInputChange =(event)=>{\nthis.setState({\n  input: event.target.value\n})\n}\n  onButtonSubmit = () => {\n    this.setState({\n      imageUrl: this.state.input\n    })\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n      \"user_id\": \"clarifai\",\n      \"app_id\": \"main\"\n  },\n\"inputs\": [\n  {\n    \"data\": {\n      \"image\": {\n        \"url\": `${this.state.input}`\n      }\n    }\n  }\n]\n});\n\nconst requestOptions = {\nmethod: 'POST',\nheaders: {\n  'Accept': 'application/json',\n  'Authorization': 'Key 9b3b0653c4bf4c48946bdd5e78984d89'\n},\nbody: raw\n};\n\nfetch(\"https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs\", requestOptions)\n.then(response => response.text())\n.then(result => this.faceBox(this.calculateFaceLocation(result)))\n.catch(error => console.log('error', error));\n\n }\n \n onRouteChange =(prop) =>{\n  if(this.state.route ==='signin'||this.state.route ==='register'){\n    this.setState({\n      isSignedIn: true\n    })\n  }\n  else if(this.state.route ==='home'){\n    this.setState(initialState)\n  }\n    this.setState({\n      route: prop\n    })\n  \n }\n \nrender(){\n const {isSignedIn, route, imageUrl, box} = this.state\n    return (\n      <div className=\"App\">\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n        {route === 'signin' \n        ? <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n        : route === 'register' ? \n        <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n        : <>\n        <h1 style={{textAlign: 'center', color:'white'}}> Hello {this.state.user.name}</h1>\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} imageUrl={imageUrl} box={box} />\n        <ParticlesBg type=\"cobweb\" bg={true} />\n          </>\n        }\n      </div>\n    );\n\n    \n  }\n  \n}\n\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}