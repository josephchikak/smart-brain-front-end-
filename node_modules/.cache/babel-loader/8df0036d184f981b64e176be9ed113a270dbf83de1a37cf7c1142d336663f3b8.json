{"ast":null,"code":"var _jsxFileName = \"/Users/JosephChikak/Desktop/smart-brain-front-end-/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport ParticlesBg from 'particles-bg';\nimport SignIn from './Signin/SignIn';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    joined: ''\n  }\n};\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = JSON.parse(data).outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.faceBox = x => {\n      this.setState({\n        box: x\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": \"clarifai\",\n          \"app_id\": \"main\"\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": `${this.state.input}`\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key 9b3b0653c4bf4c48946bdd5e78984d89'\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs\", requestOptions).then(response => response.text()).then(result => this.faceBox(this.calculateFaceLocation(result))).catch(error => console.log('error', error));\n    };\n    this.onRouteChange = prop => {\n      if (this.state.route === 'signin' || this.state.route === 'register') {\n        this.setState({\n          isSignedIn: true\n        });\n      } else if (this.state.route === 'home') {\n        this.setState(initialState);\n      }\n      this.setState({\n        route: prop\n      });\n    };\n    this.state = initialState;\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onButtonSubmit = this.onButtonSubmit.bind(this);\n    this.calculateFaceLocation = this.calculateFaceLocation.bind(this);\n    this.faceBox = this.faceBox.bind(this);\n    this.loadUser = this.loadUser.bind(this);\n  }\n  render() {\n    const {\n      isSignedIn,\n      route,\n      imageUrl,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : route === 'register' ? /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: 'center',\n            color: 'white'\n          },\n          children: [\" Hello \", this.state.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit,\n          imageUrl: imageUrl,\n          box: box\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ParticlesBg, {\n          type: \"cobweb\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Navigation","ImageLinkForm","ParticlesBg","SignIn","Register","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","joined","App","Component","constructor","props","loadUser","data","setState","calculateFaceLocation","clarifaiFace","JSON","parse","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","faceBox","x","onInputChange","event","target","value","onButtonSubmit","state","raw","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","catch","error","console","log","onRouteChange","prop","bind","render","textAlign","color"],"sources":["/Users/JosephChikak/Desktop/smart-brain-front-end-/src/App.js"],"sourcesContent":["\nimport React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport ParticlesBg from 'particles-bg';\nimport SignIn from './Signin/SignIn';\nimport Register from './components/Register/Register';\n\nconst initialState ={\n  input:'',\n  imageUrl:'',\n  box:{},\n  route: 'signin',\n  isSignedIn: false,\n  user:{\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    joined: '' \n  }\n} \n\nclass App extends React.Component {\n\nconstructor(props){\n  super(props);\n  this.state = initialState;\n  this.onInputChange =this.onInputChange.bind(this)\n  this.onButtonSubmit =this.onButtonSubmit.bind(this)\n  this.calculateFaceLocation = this.calculateFaceLocation.bind(this)\n  this.faceBox = this.faceBox.bind(this)\n  this.loadUser = this.loadUser.bind(this)\n}\n\nloadUser =(data) =>{\n  this.setState({\n    user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      password: data.password,\n      joined: data.joined\n    }\n  })\n}\n\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = JSON.parse(data).outputs[0].data.regions[0]\n   .region_info.bounding_box;\n  const image = document.getElementById(\"inputimage\");\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    }\n\n}\n\n\n\nfaceBox = (x) =>{\n  this.setState({\n      box: x\n   });\n}\n\n\n\nonInputChange =(event)=>{\nthis.setState({\n  input: event.target.value\n})\n}\n  onButtonSubmit = () => {\n    this.setState({\n      imageUrl: this.state.input\n    })\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n      \"user_id\": \"clarifai\",\n      \"app_id\": \"main\"\n  },\n\"inputs\": [\n  {\n    \"data\": {\n      \"image\": {\n        \"url\": `${this.state.input}`\n      }\n    }\n  }\n]\n});\n\nconst requestOptions = {\nmethod: 'POST',\nheaders: {\n  'Accept': 'application/json',\n  'Authorization': 'Key 9b3b0653c4bf4c48946bdd5e78984d89'\n},\nbody: raw\n};\n\nfetch(\"https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs\", requestOptions)\n.then(response => response.text())\n.then(result => this.faceBox(this.calculateFaceLocation(result)))\n.catch(error => console.log('error', error));\n\n }\n \n onRouteChange =(prop) =>{\n  if(this.state.route ==='signin'||this.state.route ==='register'){\n    this.setState({\n      isSignedIn: true\n    })\n  }\n  else if(this.state.route ==='home'){\n    this.setState(initialState)\n  }\n    this.setState({\n      route: prop\n    })\n  \n }\n \nrender(){\n const {isSignedIn, route, imageUrl, box} = this.state\n    return (\n      <div className=\"App\">\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n        {route === 'signin' \n        ? <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n        : route === 'register' ? \n        <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n        : <>\n        <h1 style={{textAlign: 'center', color:'white'}}> Hello {this.state.user.name}</h1>\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} imageUrl={imageUrl} box={box} />\n        <ParticlesBg type=\"cobweb\" bg={true} />\n          </>\n        }\n      </div>\n    );\n\n    \n  }\n  \n}\n\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}